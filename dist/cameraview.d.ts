import View from "./view";
import Image from "./image";
export default class CameraView extends View {
    constructor(id: string);
    autoCapture(path: string, file: string, maxCount: number): void;
    findFaces(max: number): void;
    getCameraCount(): number;
    getColorEffects(): string;
    getImageHeight(): number;
    getImageWidth(): number;
    getMaxZoom(): number;
    getParameters(): string;
    getPictureSizes(): string;
    getPixelData(format: string, left: number, top: number, width: number, height: number): string;
    getType(): string;
    getZoom(): number;
    hasFlash(): boolean;
    isRecording(): boolean;
    motionMosaic(xtiles: number, ytiles: number, sensitivity: number, minPeriod: number, img: Image): void;
    record(file: string, seconds?: string): void;
    reportColors(list: string, callback: Function, sampSize: number, maxRate: number): void;
    setColorEffect(effect: string): CameraView;
    setDuplicateImage(img1: Image, img2: Image): CameraView;
    setFlash(onoff: boolean): CameraView;
    setFocusMode(mode: string): CameraView;
    setOnFocus(callback: Function): CameraView;
    setOnMotion(callback: Function): CameraView;
    setOnPicture(callback: Function): CameraView;
    setOnReady(callback: Function): CameraView;
    setOrientation(angle: number): CameraView;
    setParameter(name: string, value: string | number): CameraView;
    setPictureSize(width: number, height: number): CameraView;
    setPostRotation(angle: number): CameraView;
    setPreviewImage(img: Image): CameraView;
    setSound(onoff: boolean): CameraView;
    setVideoSize(width: number, height: number): CameraView;
    setZoom(level: number): CameraView;
    startPreview(): void;
    stop(): void;
    stopPreview(): void;
    stream(ip: string, port: number, quality: string, fps: number, mtu: string): void;
    takePicture(file: string): void;
}
